{"version":3,"file":"static/js/390.92c82ef1.chunk.js","mappings":"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","sources":["DateConversion/convertDate.js","Home/Components/MainLiftItem.js","Home/Components/MainLiftList.js","Home/Components/WorkoutItem.js","Home/Components/WorkoutList.js","Home/Components/MainLiftForm/MainLiftInputs.js","Home/Components/MainLiftForm/UpdateMainLiftModal.js","Home/HomePage.js"],"sourcesContent":["const convertDate = (date) => {\n\n    const newDate = new Date(date)\n\n    const months = {\n        0 : 'Jan',\n        1 : 'Feb',\n        2 : 'Mar',\n        3 : 'Apr',\n        4 : 'May',\n        5 : 'June',\n        6 : 'July',\n        7 : 'Aug',\n        8 : 'Sep',\n        9 : 'Oct',\n        10 : 'Nov',\n        11 : 'Dec',\n    }\n\n    let month = newDate.getMonth()\n    let day = newDate.getDate()\n    let year = newDate.getFullYear()\n\n    let monthFull = months[month]\n\n    return (`${monthFull} ${day}, ${year}`)\n}\n\nexport default convertDate","import React from \"react\"\nimport Card from \"../../Components/UIElements/Card\"\n\nconst MainLiftItem = (props) => {\n    let exerciseName\n\n    if (props.exercise === \"benchPress\") {\n        exerciseName = \"Bench Press\"\n    } else if (props.exercise === \"squat\") {\n        exerciseName = \"Squat\"\n    } else if (props.exercise === \"deadlift\") {\n        exerciseName = \"Deadlift\"\n    } else {\n        exerciseName = \"Overhead Press\"\n    }\n\n    return (\n        <li>\n            <Card\n            // className = {\"nestedCard\"}\n            className = 'mx-2 p-6 rounded-lg border border-gray-2 overflow-x-auto scroll-pt-8 w-52 text-xl'\n            headerClass = 'font-bold text-xl border-b mb-4 pb-2'\n            header = { exerciseName }>\n                <h1>{ props.weight } lbs</h1>\n            </Card>\n        </li>\n    )\n}\n\nexport default MainLiftItem","import React from \"react\"\n\n// import { DUMMY_USER } from \"../../../DUMMY/DUMMY_DATA\"\n\nimport MainLiftItem from \"./MainLiftItem\"\n\nconst MainLiftList = (props) => {\n    \n    let mainLifts = props.lifts\n\n    let userMainLiftsArray = []\n\n    for (const lift in mainLifts) {\n        userMainLiftsArray.push([lift, mainLifts[lift]])\n    }\n\n    // console.log(userMainLiftsArray)\n\n    const items = userMainLiftsArray.map((lift) => (\n        <MainLiftItem \n            key = { lift[0] }\n            exercise = { lift[0] }\n            weight = { lift[1] }\n        />\n    ))\n\n    // console.log(items)\n\n    return (\n        <div>\n            <ul className=\"flex overflow-x-auto pb-4 lg:pb-2\">\n                { items }\n            </ul>\n        </div>\n    )\n}\n\nexport default MainLiftList","import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport Card from \"../../Components/UIElements/Card\"\n\nimport convertDate from \"../../DateConversion/convertDate\"\n\nconst WorkoutItem = (props) => {\n\n    const date = props.dateCreated\n\n    const convertedDate = convertDate(date)\n\n    const header = (\n        <div className=\"flex items-baseline justify-between truncate max-w-full\">\n            <p className=\"truncate\">{ props.workoutTitle }</p>\n            <p className=\"text-sm italic font-normal text-black/60\">{ convertedDate }</p>\n        </div>\n    )\n    \n    return (\n        <li>\n            <Link to = {`/workout/${props.id}/view`}>\n                <Card\n                    className = 'my-2 p-6 rounded-lg border border-gray-2 text-xl'\n                    header = { header }\n                    headerClass = 'font-bold text-3xl border-b mb-4 pb-2'\n                >\n                    <p>{`${ props.exercises.length } Exercises`}</p>\n                </Card>\n            </Link>\n        </li>\n    )\n}\n\nexport default WorkoutItem","import React from \"react\"\nimport WorkoutItem from \"./WorkoutItem\"\n\nconst WorkoutList = (props) => {\n\n    let workouts = props.workouts\n\n    const items = workouts.map((workout) => (\n        <WorkoutItem\n            key = { workout.workoutTitle }\n            id = { workout._id }\n            workoutTitle = { workout.workoutTitle }\n            exercises = { workout.exercises }\n            dateCreated = { workout.created_at }\n        />\n    ))\n\n    return (\n        <div>\n            <ul>\n                {/* shows the 3 most recently created workouts */}\n                { items.reverse().slice(0,3) }\n            </ul>\n        </div>\n    )\n}\n\nexport default WorkoutList","import React from \"react\";\n\nimport Input from \"../../../Components/FormElements/Input\";\n\nconst MainLiftInputs = (props) => {\n    \n    const mainLifts = props.mainLifts\n\n    return (\n        <div>\n\n            {/* AGE */}\n            {/* <Input\n                id = 'age'\n                label = \"Your Age\"\n                type = \"number\"\n                placeholder = \"Enter your age.\"\n                errorText = \"Please enter your age!\"\n                value = { user.age || null }\n            /> */}\n\n            {/* BODYWEIGHT */}\n            {/* <Input\n                id = 'bodyWeight'\n                label = \"Your Bodyweight\"\n                type = \"number\"\n                placeholder = \"Enter how much you weight.\"\n                errorText = \"Please enter your weight!\"\n                value = { user.bodyWeight || null }\n            /> */}\n\n            {/* BENCH PRESS */}\n            <Input\n                id = 'benchPress'\n                label = \"Your Bench Max\"\n                type = \"number\"\n                placeholder = \"Enter your bench max.\"\n                errorText = \"Please enter a max!\"\n                value = { mainLifts.benchPress || null }\n            />\n\n            {/* SQUAT */}\n            <Input\n                id = 'squat'\n                label = \"Your Squat Max\"\n                type = \"number\"\n                placeholder = \"Enter your Squat max.\"\n                errorText = \"Please enter a max!\"\n                value = { mainLifts.squat || null }\n            />\n\n            {/* DEADLIFT */}\n            <Input\n                id = 'deadlift'\n                label = \"Your Deadlift Max\"\n                type = \"number\"\n                placeholder = \"Enter your deadlift max.\"\n                errorText = \"Please enter a max!\"\n                value = { mainLifts.deadlift || null }\n            />\n\n            {/* OVERHEAD PRESS */}\n            <Input\n                id = 'overHeadPress'\n                label = \"Your Overhead Press Max\"\n                type = \"number\"\n                placeholder = \"Enter your overhead press max.\"\n                errorText = \"Please enter a max!\"\n                value = { mainLifts.overHeadPress || null }\n            />\n\n        </div>\n    )\n}\n\nexport default MainLiftInputs","import React, { useContext } from \"react\"\nimport Modal from \"../../../Components/UIElements/Modal\"\nimport Button from \"../../../Components/FormElements/Button\"\nimport { useFetch } from \"../../../Hooks/useFetch\"\nimport MainLiftInputs from \"./MainLiftInputs\"\nimport { AuthContext } from \"../../../Context/auth-context\"\n\nconst UpdateMainLiftModal = (props) => {\n\n    const auth = useContext(AuthContext)\n\n    const { hasError, sendRequest, clearError } = useFetch()\n\n    const user = props.user\n    const mainLifts = props.mainLifts\n\n    const submitUpdateHandler = async (event) => {\n        event.preventDefault()\n\n        const formData = {\n            // age: event.target[0].value,\n            // bodyWeight: event.target[1].value,\n            benchPress: event.target[0].value,\n            squat: event.target[1].value,\n            deadlift: event.target[2].value,\n            overHeadPress: event.target[3].value\n        }\n\n        // const mainLiftMaxes = {\n        //     benchPress: event.target[2].value,\n        //     squat: event.target[3].value,\n        //     deadlift: event.target[4].value,\n        //     overHeadPress: event.target[5].value\n        // }\n\n        try {\n            await sendRequest(\n                // URL\n                `${process.env.REACT_APP_BACKEND_URL}/user/${user._id}/updateInfo`,\n                // METHOD\n                \"POST\",\n                // HEADERS\n                {\n                    'Content-Type': \"application/json\",\n                    Authorization: 'Bearer ' + auth.token\n                },\n                // BODY\n                JSON.stringify({\n                    // age: formData.age,\n                    // bodyWeight: formData.bodyWeight,\n                    benchPress: formData.benchPress,\n                    squat: formData.squat,\n                    deadlift: formData.deadlift,\n                    overHeadPress: formData.overHeadPress\n                })\n            )\n        } catch(err) {\n            console.log(`Error updating main lifts: ${err}`)\n        }\n        \n        props.onUpdate(formData)\n    }\n\n    const footer = (\n        <div className='flex justify-end mt-3 shrink border-top-2'>\n            <Button\n                text = \"Nevermind\"\n                type = \"button\"\n                onClick = { props.onCancel }\n                className = \"button border border-gray-1 mr-2 rounded-md shadow hover:cursor-pointer hover:scale-105 bg-red-500 text-white/75 hover:text-white hover:bg-red-600\"\n            />\n\n            <Button\n                text = \"Save Changes\"\n                type = \"submit\"\n            />\n        </div>\n    )\n\n    return (\n        <Modal\n            header = {`Update User Info`}\n            // footer = { footer }\n            show = { props.show }\n            // onSubmit = { submitUpdateHandler }\n            error = { hasError }\n            clearError = { clearError }\n        >\n\n            <form onSubmit={ submitUpdateHandler }>\n\n                {/* inputs for each part of userMainLifts */}\n                <MainLiftInputs user = { user } mainLifts = { mainLifts } />\n\n                { footer }\n\n            </form>\n\n        </Modal>\n    )\n}\n\nexport default UpdateMainLiftModal","import React, { useContext, useEffect, useState } from \"react\"\n\n// component imports\nimport Button from \"../Components/FormElements/Button\"\nimport Card from \"../Components/UIElements/Card\"\nimport MainLiftList from \"./Components/MainLiftList\"\nimport WorkoutList from \"./Components/WorkoutList\"\nimport LoadingSpinner from \"../Components/UIElements/LoadingSpinner\"\nimport ErrorModal from \"../Components/UIElements/ErrorModal\"\n\n// hook imports\nimport { useFetch } from \"../Hooks/useFetch\"\nimport UpdateMainLiftModal from \"./Components/MainLiftForm/UpdateMainLiftModal\"\nimport { AuthContext } from \"../Context/auth-context\"\n\nconst HomePage = (props) => {\n\n    const auth = useContext(AuthContext)\n\n    const [ loadedUser, setLoadedUser ] = useState(null)\n    const [ loadedUserLifts, setLoadedUserLifts ] = useState({})\n    const [ loadedWorkouts, setLoadedWorkouts ] = useState([])\n    const [ showMainLiftModal, setShowMainLiftModal ] = useState(false)\n    \n\n    const { isLoading, hasError, sendRequest, clearError } = useFetch()\n\n    // FETCH REQUEST\n    useEffect(() => {\n        \n        const fetchHomePage = async () => {\n            \n            try {\n\n                const responseData = await sendRequest(\n                    // URL\n                    `${process.env.REACT_APP_BACKEND_URL}/`,\n                    // METHOD\n                    'GET',\n                    // HEADERS\n                    {\n                        Authorization: 'Bearer ' + auth.token\n                    }\n                )\n\n                setLoadedUser(responseData.user)\n                setLoadedUserLifts(responseData.user.mainLiftMaxes)\n                setLoadedWorkouts(responseData.workouts)\n\n            } catch (err) {\n                console.log(`Error!!! ${err}`)\n            }\n        }\n\n\n        fetchHomePage()\n\n    }, [ sendRequest, auth.token ])\n\n\n    // MODAL CODE FOR UPDATE MAIN LIFTS\n    const showMainLiftModalHandler = () => {\n        setShowMainLiftModal(true)\n    }\n\n    const closeMainLiftModalHandler = () => {\n        setShowMainLiftModal(false)\n    }\n\n    const updateMainLiftsHandler = (data) => {\n        setLoadedUserLifts(data)\n        setShowMainLiftModal(false)\n    }\n\n    // FOOTER BUTTONS FOR LISTS ON HOME PAGE\n    const workoutFooter = (\n        <Button\n            type = \"button\"\n            text = { loadedWorkouts.length > 0 ? \"View All Workouts\" : \"Create a Workout\"}\n            link = {loadedWorkouts.length > 0 ? `/workout/all` : `/workout/create`}\n        />\n    )\n\n    const mainLiftsFooter = (\n        <Button\n            type = \"button\"\n            text = \"Update Lifts\"\n            onClick = { showMainLiftModalHandler }\n        />\n    )\n\n    return (\n        <div className = \"homepage-container\">\n\n            <ErrorModal error = { hasError } onClear = { clearError } />\n\n            { isLoading &&\n                <div>\n                    <LoadingSpinner asOverlay />\n                </div>\n            }\n\n            {\n                showMainLiftModal &&\n                <UpdateMainLiftModal\n                    user = { loadedUser }\n                    mainLifts = { loadedUserLifts }\n                    show = { showMainLiftModal }\n                    onCancel = { closeMainLiftModalHandler }\n                    onUpdate = { updateMainLiftsHandler }\n                />\n            }\n\n            <Card header = { <h1>Your Main Lifts</h1> } footer = { mainLiftsFooter } >\n                \n                <MainLiftList lifts = { loadedUserLifts } />\n            </Card>\n\n            <Card header = { <h1>Latest Workouts</h1> } footer = { workoutFooter } >\n\n                { loadedWorkouts.length > 0 ? <WorkoutList workouts = { loadedWorkouts } /> : <p>You don't have any workouts yet. Add one?</p>}\n                \n            </Card>\n\n        </div>\n    )\n}\n\nexport default HomePage"],"names":["date","newDate","Date","month","getMonth","day","getDate","year","getFullYear","props","exerciseName","exercise","Card","className","headerClass","header","weight","mainLifts","lifts","userMainLiftsArray","lift","push","items","map","dateCreated","convertedDate","convertDate","workoutTitle","to","id","exercises","length","workouts","workout","_id","created_at","reverse","slice","Input","label","type","placeholder","errorText","value","benchPress","squat","deadlift","overHeadPress","auth","useContext","AuthContext","useFetch","hasError","sendRequest","clearError","user","submitUpdateHandler","event","preventDefault","formData","target","process","Authorization","token","JSON","stringify","console","log","onUpdate","footer","Button","text","onClick","onCancel","Modal","show","error","onSubmit","useState","loadedUser","setLoadedUser","loadedUserLifts","setLoadedUserLifts","loadedWorkouts","setLoadedWorkouts","showMainLiftModal","setShowMainLiftModal","isLoading","useEffect","fetchHomePage","responseData","mainLiftMaxes","workoutFooter","link","mainLiftsFooter","ErrorModal","onClear","LoadingSpinner","asOverlay","data"],"sourceRoot":""}