{"version":3,"file":"static/js/596.c6eb6041.chunk.js","mappings":"kGA4BA,IA5BoB,SAACA,GAEjB,IAAMC,EAAU,IAAIC,KAAKF,GAiBrBG,EAAQF,EAAQG,WAChBC,EAAMJ,EAAQK,UACdC,EAAON,EAAQO,cAInB,MAAM,GAAN,OArBe,CACX,EAAI,MACJ,EAAI,MACJ,EAAI,MACJ,EAAI,MACJ,EAAI,MACJ,EAAI,OACJ,EAAI,OACJ,EAAI,MACJ,EAAI,MACJ,EAAI,MACJ,GAAK,MACL,GAAK,OAOcL,GAEvB,YAAwBE,EAAxB,aAAgCE,EACnC,C,+ICUD,EA5B8B,SAACE,GAE3B,IAAMT,EAAOS,EAAMC,YAEbC,GAAgBC,EAAAA,EAAAA,GAAYZ,GAE5Ba,GACF,iBAAKC,UAAU,0DAAf,WACI,cAAGA,UAAU,WAAb,SAA0BL,EAAMM,gBAChC,cAAGD,UAAU,2CAAb,SAA0DH,OAIlE,OACI,yBACI,SAAC,KAAD,CAAMK,GAAE,mBAAgBP,EAAMQ,GAAtB,SAAR,UACI,SAACC,EAAA,EAAD,CACIJ,UAAY,mDACZD,OAAWA,EACXM,YAAc,wCAHlB,UAKI,iCAAQV,EAAMW,UAAUC,OAAxB,qBAKnB,ECJD,EAtB6B,SAACZ,GAE1B,IAEMa,EAFSb,EAAMc,SAEEC,KAAI,SAACC,GAAD,OACvB,SAAC,EAAD,CAEIR,GAAOQ,EAAQC,IACfX,aAAiBU,EAAQV,aACzBK,UAAcK,EAAQL,UACtBV,YAAgBe,EAAQE,YAJhBF,EAAQV,aAFG,IAW3B,OACI,wBACMO,GAGb,E,6CCsED,EArFqB,WAEjB,IAAMM,GAAOC,EAAAA,EAAAA,YAAWC,EAAAA,GAExB,GAAyDC,EAAAA,EAAAA,KAAjDC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAAUC,EAA7B,EAA6BA,YAAaC,EAA1C,EAA0CA,WAE1C,GAA8CC,EAAAA,EAAAA,UAAS,IAAvD,eAAQC,EAAR,KAAwBC,EAAxB,MAEAC,EAAAA,EAAAA,YAAU,WAEN,IAAMC,EAAgB,yCAAG,kHAGUN,EAAW,UAE/BO,sCAF+B,WAMlC,CACIC,cAAe,UAAYd,EAAKe,QAVvB,OAGXC,EAHW,OAcjBN,EAAkBM,EAAarB,UAdd,gDAiBjBsB,QAAQC,IAAR,MAjBiB,yDAAH,qDAuBtBN,GAEH,GAAE,CAAEN,EAAaN,EAAKe,QAIvB,IAAMI,GACF,0BAEI,4CAUFC,GACF,SAACC,EAAA,EAAD,CACIC,KAAO,SACPC,KAASd,EAAehB,OAAS,EAAI,sBAAwB,gBAC7D+B,KAAI,oBAIZ,OACI,UAAC,WAAD,YAEI,SAACC,EAAA,EAAD,CAAYC,MAAUrB,EAAWsB,QAAYpB,IAE3CH,IACE,0BACI,SAACwB,EAAA,EAAD,CAAgBC,WAAS,OAIjC,SAACvC,EAAA,EAAD,CAAML,OAAWkC,EAAaW,OAAWV,EAAzC,SAEMX,EAAehB,OAAS,GAEtB,SAAC,EAAD,CAAsBE,SAAac,KAEnC,yEAMnB,C","sources":["DateConversion/convertDate.js","Pages/Workout/Components/WorkoutsPageLiftItems.js","Pages/Workout/Components/WorkoutsPageLiftList.js","Pages/Workout/Pages/WorkoutsPage.js"],"sourcesContent":["const convertDate = (date) => {\n\n    const newDate = new Date(date)\n\n    const months = {\n        0 : 'Jan',\n        1 : 'Feb',\n        2 : 'Mar',\n        3 : 'Apr',\n        4 : 'May',\n        5 : 'June',\n        6 : 'July',\n        7 : 'Aug',\n        8 : 'Sep',\n        9 : 'Oct',\n        10 : 'Nov',\n        11 : 'Dec',\n    }\n\n    let month = newDate.getMonth()\n    let day = newDate.getDate()\n    let year = newDate.getFullYear()\n\n    let monthFull = months[month]\n\n    return (`${monthFull} ${day}, ${year}`)\n}\n\nexport default convertDate","import React from \"react\"\nimport { Link } from \"react-router-dom\"\n\n// component imports\nimport Card from \"../../../Components/UIElements/Card\"\n\nimport convertDate from \"../../../DateConversion/convertDate\"\n\nconst WorkoutsPageLiftItems = (props) => {\n\n    const date = props.dateCreated\n\n    const convertedDate = convertDate(date)\n\n    const header = (\n        <div className=\"flex items-baseline justify-between truncate max-w-full\">\n            <p className=\"truncate\">{ props.workoutTitle }</p>\n            <p className=\"text-sm italic font-normal text-black/60\">{ convertedDate }</p>\n        </div>\n    )\n    \n    return (\n        <li>\n            <Link to = {`/workout/${props.id}/view`}>\n                <Card\n                    className = 'my-2 p-6 rounded-lg border border-gray-2 text-xl'\n                    header = { header }\n                    headerClass = 'font-bold text-3xl border-b mb-4 pb-2'\n                >\n                    <p>{`${ props.exercises.length } Exercises`}</p>\n                </Card>\n            </Link>\n        </li>\n    )\n}\n\nexport default WorkoutsPageLiftItems","import React from \"react\"\n\n// component imports\nimport WorkoutsPageLiftItems from \"./WorkoutsPageLiftItems\"\n\n\n// hook imports\n\nconst WorkoutsPageLiftList = (props) => {\n\n    let workouts = props.workouts\n\n    const items = workouts.map((workout) => (\n        <WorkoutsPageLiftItems\n            key = { workout.workoutTitle }\n            id = { workout._id }\n            workoutTitle = { workout.workoutTitle }\n            exercises = { workout.exercises }\n            dateCreated = { workout.created_at }\n            // add other stuff later\n        />\n    ))\n\n    return (\n        <ul>\n            { items }\n        </ul>\n    )\n}\n\nexport default WorkoutsPageLiftList","import React, { useContext, useEffect, useState } from \"react\"\n\n// component imports\nimport Card from \"../../../Components/UIElements/Card\"\nimport WorkoutsPageLiftList from \"../Components/WorkoutsPageLiftList\"\nimport Button from \"../../../Components/FormElements/Button\"\nimport LoadingSpinner from \"../../../Components/UIElements/LoadingSpinner\"\nimport ErrorModal from \"../../../Components/UIElements/ErrorModal\"\n\n// hook imports\nimport { useFetch } from \"../../../Hooks/useFetch\"\nimport { AuthContext } from \"../../../Context/auth-context\"\n\nconst WorkoutsPage = () => {\n\n    const auth = useContext(AuthContext)\n\n    const { isLoading, hasError, sendRequest, clearError } = useFetch()\n\n    const [ loadedWorkouts, setLoadedWorkouts ] = useState([])\n\n    useEffect(() => {\n\n        const fetchWorkoutPage = async () => {\n\n            try {\n                const responseData = await sendRequest(\n                    // URL\n                    `${process.env.REACT_APP_BACKEND_URL}/`,\n                    // METHOD\n                    `GET`,\n                    // HEADERS\n                    {\n                        Authorization: 'Bearer ' + auth.token\n                    }\n                )\n\n                setLoadedWorkouts(responseData.workouts)\n\n            } catch(err) {\n                console.log(err)\n            }\n\n\n        }\n\n        fetchWorkoutPage()\n\n    }, [ sendRequest, auth.token ])\n\n    // const [ sortNewFirst, setSortNewFirst ] = useState(false)\n\n    const cardHeader = (\n        <div>\n\n            <h1>Your Workouts</h1>\n            {/* <Button\n                type = \"button\"\n                text = { sortNewFirst ? \"Show Oldest First\" : \"Show Newest First\"}\n                onClick = { () => setSortNewFirst(!sortNewFirst)}\n            /> */}\n\n        </div> \n    )\n\n    const cardFooter = (\n        <Button\n            type = \"button\"\n            text = { loadedWorkouts.length > 0 ? \"Add Another Workout\" : \"Add a Workout\"}\n            link = {`/workout/create`}\n        />\n    )\n\n    return(\n        <React.Fragment>\n\n            <ErrorModal error = { hasError } onClear = { clearError } />\n\n            { isLoading &&\n                <div>\n                    <LoadingSpinner asOverlay />\n                </div>\n            }\n\n            <Card header = { cardHeader } footer = { cardFooter } >\n\n                { loadedWorkouts.length > 0 ?\n                    // <WorkoutsPageLiftList workouts = { sortNewFirst ? loadedWorkouts.reverse() : loadedWorkouts }/>\n                    <WorkoutsPageLiftList workouts = { loadedWorkouts }/>\n                    : \n                    <p>You don't have any workouts yet. Add One?</p>\n                }\n\n            </Card>\n        </React.Fragment>\n    )\n}\n\nexport default WorkoutsPage"],"names":["date","newDate","Date","month","getMonth","day","getDate","year","getFullYear","props","dateCreated","convertedDate","convertDate","header","className","workoutTitle","to","id","Card","headerClass","exercises","length","items","workouts","map","workout","_id","created_at","auth","useContext","AuthContext","useFetch","isLoading","hasError","sendRequest","clearError","useState","loadedWorkouts","setLoadedWorkouts","useEffect","fetchWorkoutPage","process","Authorization","token","responseData","console","log","cardHeader","cardFooter","Button","type","text","link","ErrorModal","error","onClear","LoadingSpinner","asOverlay","footer"],"sourceRoot":""}