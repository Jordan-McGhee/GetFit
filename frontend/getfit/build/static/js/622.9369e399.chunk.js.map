{"version":3,"file":"static/js/622.9369e399.chunk.js","mappings":"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","sources":["DateConversion/convertDate.js","Pages/Workout/Components/DeleteWorkout.js","Pages/Workout/Pages/ViewWorkout.js"],"sourcesContent":["const convertDate = (date) => {\n\n    const newDate = new Date(date)\n\n    const months = {\n        0 : 'Jan',\n        1 : 'Feb',\n        2 : 'Mar',\n        3 : 'Apr',\n        4 : 'May',\n        5 : 'June',\n        6 : 'July',\n        7 : 'Aug',\n        8 : 'Sep',\n        9 : 'Oct',\n        10 : 'Nov',\n        11 : 'Dec',\n    }\n\n    let month = newDate.getMonth()\n    let day = newDate.getDate()\n    let year = newDate.getFullYear()\n\n    let monthFull = months[month]\n\n    return (`${monthFull} ${day}, ${year}`)\n}\n\nexport default convertDate","import React, { useContext } from \"react\"\nimport Modal from \"../../../Components/UIElements/Modal\"\nimport Button from \"../../../Components/FormElements/Button\"\nimport { useFetch } from \"../../../Hooks/useFetch\"\nimport { useNavigate } from \"react-router-dom\"\nimport { AuthContext } from \"../../../Context/auth-context\"\n\nconst DeleteWorkout = (props) => {\n\n    const auth = useContext(AuthContext)\n\n    const { hasError, sendRequest, clearError } = useFetch()\n\n    const workout = props.workout\n\n    let navigate = useNavigate()\n\n    const submitDeleteHandler = async (event) => {\n        event.preventDefault()\n\n        try {\n            await sendRequest(\n                // URL\n                `${process.env.REACT_APP_BACKEND_URL}/workout/${workout._id}`,\n                // METHOD\n                \"DELETE\",\n                // HEADERS\n                {\n                    Authorization: 'Bearer ' + auth.token\n                }\n                // BODY\n            )\n        } catch(err) {\n            console.log(`Error deleting workout: ${err}`)\n        }\n        \n        navigate(\"/workout/all\")\n    }\n\n    const footer = (\n        <div>\n            <Button\n                text = \"Delete\"\n                type = \"submit\"\n                onClick = { submitDeleteHandler }\n                className = \"bg-red-500 text-white/75 hover:text-white hover:bg-red-600 button rounded-md shadow hover:cursor-pointer mr-2 hover:scale-105\"\n            />\n\n            <Button\n                text = \"Nevermind\"\n                type = \"button\"\n                onClick = { props.onCancel }\n            />\n        </div>\n    )\n\n    return (\n        <Modal\n            header = {`Confirm Delete Workout`}\n            footer = { footer }\n            show = { props.show }\n            error = { hasError }\n            clearError = { clearError }\n        >\n            <p className=\"break-words\">Are you sure you want to delete {workout.workoutTitle}? <br></br> <span className=\"italic font-bold\">This can't be undone.</span></p>\n            \n        </Modal>\n    )\n}\n\nexport default DeleteWorkout","import React, { useState, useEffect, useContext } from \"react\";\n\n// component imports\nimport Button from \"../../../Components/FormElements/Button\";\nimport Card from \"../../../Components/UIElements/Card\";\nimport LoadingSpinner from \"../../../Components/UIElements/LoadingSpinner\";\nimport ErrorModal from \"../../../Components/UIElements/ErrorModal\";\nimport DeleteWorkout from \"../Components/DeleteWorkout\";\n\n// hook imports\nimport { useParams } from \"react-router-dom\";\nimport { useFetch } from \"../../../Hooks/useFetch\";\nimport { AuthContext } from \"../../../Context/auth-context\";\nimport convertDate from \"../../../DateConversion/convertDate\";\n\nconst ViewWorkout = props => {\n\n    const auth = useContext(AuthContext)\n\n    const [ loadedWorkout, setLoadedWorkout ] = useState(null)\n\n    const { isLoading, hasError, sendRequest, clearError } = useFetch()\n\n    const workoutID = useParams().workoutID\n\n    useEffect(() => {\n\n        const fetchWorkout = async () => {\n\n            try {\n                const responseData = await sendRequest(\n                    // URL\n                    `${process.env.REACT_APP_BACKEND_URL}/workout/${workoutID}/view`,\n                    // METHOD\n                    'GET',\n                    // HEADERS\n                    {\n                        Authorization: 'Bearer ' + auth.token\n                    }\n                )\n\n                // console.log(responseData.message)\n                // console.log(responseData.workout)\n\n                setLoadedWorkout(responseData.workout)\n\n            } catch(err) {\n                console.log(err)\n            }\n\n        }\n\n        fetchWorkout()\n\n    }, [ sendRequest, workoutID, auth.token ])\n\n\n\n    const [ showModal, setShowModal ] = useState(false)\n    \n    const showDeleteModalHandler = () => {\n        setShowModal(true)\n    }\n\n    const closeDeleteModalHandler = () => {\n        setShowModal(false)\n    }\n\n\n    const date = loadedWorkout && loadedWorkout.created_at\n\n    const convertedDate = convertDate(date)\n\n    const workoutHeader = (\n        <div className=\"flex items-baseline justify-between truncate max-w-full\">\n            <p className=\"truncate\">\n                { loadedWorkout && loadedWorkout.workoutTitle}\n            </p>\n\n            <p className=\"text-sm italic font-normal text-black/60\">\n                { convertedDate }\n            </p>\n\n        </div>\n    )\n\n    const workoutFooter = (\n        <div>\n            <Button\n                type = \"text\"\n                text = \"Delete Workout\"\n                onClick = { showDeleteModalHandler }\n                className = \"bg-red-500 text-white/75 hover:text-white hover:bg-red-600 button rounded-md shadow hover:cursor-pointer mr-2 hover:scale-105 border-none\"\n            />\n\n            <Button\n                link = {`/workout/${workoutID}/edit`}\n                type = \"text\"\n                text = \"Edit Workout\"\n            />\n        </div>\n    )\n\n\n    return (\n        <React.Fragment>\n\n            <ErrorModal error = { hasError } onClear = { clearError } />\n\n            { \n                isLoading &&\n                <LoadingSpinner asOverlay />\n            }\n\n            {\n                showModal && \n                <DeleteWorkout\n                    workout = { loadedWorkout ? loadedWorkout : \"\"}\n                    show = { showModal }\n                    onCancel = { closeDeleteModalHandler }\n                />\n            }\n\n            <Card\n                header = { workoutHeader }\n                footer = { workoutFooter }\n                className = \"p-6 rounded-lg border border-gray-2 text-xl bg-white shadow-lg mt-6\"\n                headerClass = 'font-bold text-3xl border-b-2 mb-4 pb-2'\n            >\n\n                <ul >\n\n                    {/* ITERATE OVER EXERCISES TO DISPLAY THEM */}\n                    { loadedWorkout && loadedWorkout.exercises.map(exercise => (\n                        <li key = { exercise.id } className = 'mb-2 ml-6 pb-2'>\n                            <h4 className=\"font-semibold text-xl text-black border-b w-fit pr-2\">\n                                { exercise.exerciseName }\n                            </h4>\n\n                            <div className=\"flex md:w-3/5 justify-between my-2\">\n                                <p>{ exercise.sets } Sets x { exercise.reps } Reps</p>\n                                <p>{ exercise.weightUsed[ exercise.weightUsed.length - 1 ] === '0' ? `Body Weight` : `Last Weight: ${ exercise.weightUsed }`} </p>\n                            </div>\n                        </li>\n                    ))}\n\n                </ul>\n\n            </Card>\n\n        </React.Fragment>\n    )\n}\n\nexport default ViewWorkout"],"names":["date","newDate","Date","month","getMonth","day","getDate","year","getFullYear","props","auth","useContext","AuthContext","useFetch","hasError","sendRequest","clearError","workout","navigate","useNavigate","submitDeleteHandler","event","preventDefault","process","_id","Authorization","token","console","log","footer","Button","text","type","onClick","className","onCancel","Modal","header","show","error","workoutTitle","useState","loadedWorkout","setLoadedWorkout","isLoading","workoutID","useParams","useEffect","fetchWorkout","responseData","showModal","setShowModal","created_at","convertedDate","convertDate","workoutHeader","workoutFooter","link","ErrorModal","onClear","LoadingSpinner","asOverlay","Card","headerClass","exercises","map","exercise","exerciseName","sets","reps","weightUsed","length","id"],"sourceRoot":""}